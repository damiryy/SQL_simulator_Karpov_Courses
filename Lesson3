Лекция 3.1. Первые запросы
https://www.youtube.com/watch?v=J_Wn3sZ5wcc&source_ve_path=MjM4NTE&feature=emb_title

Лекция 3.3. Как решать задачи
https://www.youtube.com/watch?v=h_oNVxy0IOQ&source_ve_path=MjM4NTE&feature=emb_title

Задача 1.
Первые лекции позади, пора приступать к практике!

Давайте для начала напишем самый простой запрос и посмотрим, как выглядит таблица products.

Чтобы вывести все записи со значениями во всех колонках, необходимо либо перечислить все колонки в операторе SELECT, либо указать после оператора специальный символ «*»:

SELECT column_1, column_2, ...
FROM table


SELECT *
FROM table


На заметку:

Оператор FROM всегда указывается после оператора SELECT. В обратном порядке их записывать нельзя — база данных вернёт ошибку.
-----------------------------------------------------------
Задание 1 :

Выведите все записи из таблицы products.

Поля в результирующей таблице: product_id, name, price

К каждой задаче под специальной кнопкой мы будем приводить результат, который ожидает проверяющая система. Пользоваться кнопкой при решении задачи или нет — решать вам. Однако рекомендуем прибегать к ней только в случае крайней необходимости — старайтесь пробовать писать запросы без неё, как на настоящей работе. 
Решение ЗАДАЧА 1
SELECT product_id ,
       name ,
       price
FROM   products


На заметку:

Оператор ORDER BY всегда указывается после операторов SELECT и FROM.
------------------------------------------
Задание 2:

Выведите все записи из таблицы products, отсортировав их по наименованиям товаров в алфавитном порядке, т.е. по возрастанию. Для сортировки используйте оператор ORDER BY.

Поля в результирующей таблице: product_id, name, price

Решение ЗАДАНИЕ 2
SELECT product_id ,
       name ,
       price
FROM   products
ORDER BY name asc;
-----------------------------------------
Задача 3.
Отсортируйте таблицу courier_actions сначала по колонке courier_id по возрастанию id курьера, потом по колонке action (снова по возрастанию), а затем по колонке time, но уже по убыванию — от самого последнего действия к самому первому. Не забудьте включить в результат колонку order_id.

Добавьте в запрос оператор LIMIT и выведите только первые 1000 строк результирующей таблицы.

Поля в результирующей таблице: courier_id, order_id, action, time

Пояснение:

Как вы уже догадались, сортировать таблицы можно в том числе по полям с датами и временем.
Решение:
SELECT courier_id ,
       order_id ,
       action ,
       time
FROM   courier_actions
ORDER BY courier_id asc , action asc , time desc limit 1000;
-----------------------------------------------------
Задача 4.
Используя операторы SELECT, FROM, ORDER BY и LIMIT, определите 5 самых дорогих товаров в таблице products, которые доставляет наш сервис. Выведите их наименования и цену.
Поля в результирующей таблице: name, price
 Подсказка
Для решения задачи необходимо отсортировать товары по убыванию цены и ограничить число выводимых записей.
Решение:
SELECT name,
       price
FROM   products
ORDER BY price desc limit 5
--------------------------------------------------------
Задача 5.
Повторите запрос из предыдущего задания, но теперь колонки name и price переименуйте соответственно в product_name и product_price.
Поля в результирующей таблице: product_name, product_price
Решение: 
SELECT name as product_name,
       price as product_price
FROM   products
ORDER BY price desc limit 5
-------------------------------------------------
Задача 6 
Используя операторы SELECT, FROM, ORDER BY и LIMIT, а также функцию LENGTH, определите товар с самым длинным названием в таблице products. Выведите его наименование, длину наименования в символах, а также цену этого товара. Колонку с длиной наименования в символах назовите name_length.

Поля в результирующей таблице: name, name_length, price

Пояснение:

Обратите внимание, что в этой задаче вам придётся сортировать результирующую таблицу по расчётной колонке name_length, которой изначально не было в таблице products.

Такая сортировка по новым колонкам возможна, поскольку это согласуется с порядком выполнения операторов в запросе: сначала выполняется выбор колонок и все преобразования над ними в операторе SELECT — и только потом производится сортировка по указанным в ORDER BY столбцам. То есть к моменту сортировки все расчётные поля уже существуют, а значит, их можно указывать в ORDER BY.

Также обратите внимание, что мы дважды указываем колонку name в операторе SELECT: в первый раз просто обращаемся к ней по имени, а во второй — используем её в качестве аргумента функции LENGTH. В этом случае тоже нет никаких противоречий — мы можем выбирать колонку столько раз, сколько необходимо, причём для этого даже необязательно присваивать этим колонкам разные алиасы (база данных сама переименует дубликат колонки).
Решение
SELECT name,
       length(name) as name_length,
       price
FROM   products
ORDER BY name_length desc limit 1
-----------------------------------------------------------------------
